colors()
examples(points)
example(points)
?devices
?device
library(datasets)
with(faithful, plot(eruptions, waiting))  ## Make plot appear on screen device
library(datasets)
with(faithful, plot(eruptions, waiting))  ## Make plot appear on screen device
?plot.default
getwd()
png("plot2.png")
y=rnorm(10,1)
x=1:10
plot.default(x,y, type="l", ylab="Global Active Power (kilowatts)")
dev.off()
?png
library(lattice)
?xyplot
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
str(BodyWeight)
head(BodyWeight)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
p
?par
?splom
?par
?print.trellis
?trellis.par.set
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality)
library(ggplot2)
qplot(Wind, Ozone, data = airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, geom = "smooth")
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
?geom
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, smooth = "loess")
install.packages("RColorBrewer")
install.packages("RColorBrewer")
install.packages("RColorBrewer")
install.packages("RColorBrewer")
library("RColorBrewer")
?brewer.pal
?readRDS
?numeric
?cut
?format
wd <- format(data2$date, "%a")
source('~/.active-rstudio-document', echo=TRUE)
getwd()
setwd("C:/Users/eszrmgz/Documents/Data Science/Reproducible Research/RepData_PeerAssessment1")
source('~/.active-rstudio-document', echo=TRUE)
Opts_chunk$set(echo=TRUE)
unzip("activity.zip")
data <- read.csv("activity.csv")
data$date <- as.Date(data$date)
str(data)
require(plyr)
summeddata <- ddply(data, .(date), summarize, Total=sum(steps), Mean=mean(steps), Median = median(steps))
barplot(summeddata$Total, main = "Total steps taken each day", xlab="Day", ylab="Steps taken")
summedMean <- as.integer(mean(summeddata$Total, na.rm=TRUE))
summedMedian <- as.integer(median(summeddata$Total, na.rm=TRUE))
summ2 <- ddply(data, .(interval), summarize, mean=round(mean(steps, na.rm=TRUE),2))
with(summ2,plot(interval, mean, type="l", main = "Average of steps taken daily, per 5-minute interval", xlab="5-minute interval", ylab="Average of steps taken"))
maxmeansteps <- max(summ2$mean)
wheremaxmeansteps <- which.max(summ2$mean)
maxmeaninterval <- summ2[wheremaxmeansteps,1]
abline(v = maxmeaninterval, col = "magenta", lwd = 2)
abline(h = maxmeansteps, col = "green", lwd = 1, lty = 2)
miss <- sum(is.na(data$steps))
data2 <- data
for(i in seq_along(data2$steps)) {
if(is.na(data2[i,"steps"])) {
daysteps <- subset(summ2, summ2$interval == data2[i, "interval"])
data2[i, "steps"] <- daysteps$mean
}
}
miss2 <- sum(is.na(data2$steps))
summeddata2 <- ddply(data2, .(date), summarize, Total=sum(steps), Mean=mean(steps), Median = median(steps))
barplot(summeddata2$Total, main = "Total steps taken each day (no missing values)", xlab="Day", ylab="Steps taken")
summedMean2 <- as.integer(mean(summeddata2$Total, na.rm=TRUE))
summedMedian2 <- as.integer(median(summeddata2$Total, na.rm=TRUE))
wd <- format(data2$date, "%a")
data2$wd <- factor(wd, levels=unique(wd), ordered = TRUE)
table(data2$wd)
wd <- ifelse(weekdays(data2$date)=="sÃ¡bado"|weekdays(data2$date)=="domingo", "weekend", "weekday")
data2$wd <- factor(wd, levels=unique(wd), ordered = TRUE)
table(data2$wd)
require(lattice)
summ3 <- ddply(data2, .(interval), summarize, mean=round(mean(steps, na.rm=TRUE),2))
xyplot(mean ~ interval | wd, layout = c(1, 2))
View(summ3)
xyplot(summ3$mean ~ summ3$interval | summ3$wd, layout = c(1, 2))
xyplot(summ3$mean ~ summ3$interval | summ3$wd, layout = c(1, 2))
xyplot(summ3$mean ~ summ3$interval | summ3$wd, layout = c(2,1))
?xyplot
xyplot(summ3$mean ~ summ3$interval | summ3$wd
)
xyplot(summ3$mean ~ summ3$interval | summ3$wd, layout = c(2,1))
xyplot(mean ~ interval | wd, data = summ3, layout = c(2,1))
xyplot(mean ~ interval | wd, data = summ3, layout = c(1,2))
?ddply
summ3 <- ddply(data2, .(interval, wd), summarize, mean=round(mean(steps, na.rm=TRUE),2))
View(summ3)
xyplot(mean ~ interval | wd, data = summ3, layout = c(1,2))
xyplot(mean ~ interval | wd, data = summ3, type="l", layout = c(1,2))
opts_chunk$set(echo=TRUE)
Opts_chunk$set(echo=TRUE)
require(knittr)
require(knitr)
Opts_chunk$set(echo=TRUE)
library(knitr)
Opts_chunk$set(echo=TRUE)
Opts_chunk$set(echo=TRUE)
library(knitr)
Opts_chunk$set(echo=TRUE)
